<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.mapper.ClassMapper">

    <resultMap type="com.kh.dto.ClassDTO" id="classMap">
        <id column="class_number" property="classNumber" />
        <result column="uno" property="uno" />
        <result column="title" property="title" />
        <result column="description" property="description" jdbcType="CLOB"/>
        <result column="category" property="category" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="thumbnail" property="thumbnail" jdbcType="VARCHAR" />
        <result column="rate" property="rate" />
        <result column="name" property="name"/>
        <result column="chapterCount" property="chapterCount"/>
        <result column="videoCount" property="videoCount"/>
        <result column="studentCount" property="studentCount"/>
    </resultMap>


   <!-- 특정 강의 조회 -->
    <select id="selectClass" parameterType="int" resultMap="classMap">
        SELECT 
            c.class_number,
            c.title,
            c.description,
            c.category,
            c.create_time,
            c.update_time,
            c.thumbnail,
            c.rate,
            c.uno,
            u.name,
            (SELECT COUNT(DISTINCT up.uno) FROM USERS_PROGRESS up WHERE up.class_number = c.class_number) AS studentCount
        FROM CLASS c
        JOIN USERS u ON c.uno = u.uno
        WHERE c.class_number = #{classNumber}
    </select>

    <!-- 최신 강의 3개 조회 -->
    <select id="selectLatestClasses" resultMap="classMap">
        SELECT 
            c.class_number,
            c.title,
            c.description,
            c.category,
            c.create_time,
            c.update_time,
            c.thumbnail,
            c.rate,
            c.uno,
            u.name
        FROM CLASS c
        JOIN USERS u ON c.uno = u.uno
        ORDER BY c.create_time DESC
        FETCH FIRST 3 ROWS ONLY
    </select>

    <select id="getAllClasses" resultMap="classMap">
        SELECT *
        FROM CLASS
        ORDER BY create_time DESC
    </select> 

    <!-- 강의목록 조회 -->
    <select id="selectClassList" resultMap="classMap">
        SELECT 
            c.class_number,
            c.title,
            c.description,
            c.category,
            c.create_time,
            c.update_time,
            c.thumbnail,
            c.rate,
            c.uno,
            u.name
        FROM CLASS c
        JOIN USERS u ON c.uno = u.uno
        <where>
            <if test="category != null and category != '전체'">
                AND c.category = #{category}
            </if>
        </where>
        <choose>
            <when test="sort == '최신순'">
                ORDER BY c.create_time DESC
            </when>
            <when test="sort == '평점순'">
                ORDER BY c.rate DESC
            </when>
            <otherwise>
                ORDER BY c.create_time DESC
            </otherwise>
        </choose>
    </select>

    <select id="searchClasses" resultMap="classMap">
        SELECT 
            c.class_number,
            c.title,
            c.description,
            c.category,
            c.create_time,
            c.update_time,
            c.thumbnail,
            c.rate,
            c.uno,
            u.name
        FROM CLASS c
        JOIN USERS u ON c.uno = u.uno
        <where>
            <if test="searchKeyword != null and searchKeyword != ''">
                AND (LOWER(c.title) LIKE '%' || LOWER(#{searchKeyword}) || '%')
            </if>
            <if test="category != null and category != '전체'">
                AND c.category = #{category}
            </if>
        </where>
        <choose>
            <when test="sort == '최신순'">
                ORDER BY c.create_time DESC
            </when>
            <when test="sort == '평점순'">
                ORDER BY c.rate DESC
            </when>
            <otherwise>
                ORDER BY c.create_time DESC
            </otherwise>
        </choose>
    </select>


    <select id="selectClassNo" resultType="int">
        SELECT CLASS_NUMBER_SEQ.NEXTVAL FROM dual
    </select>

    <insert id="insertClass" parameterType="com.kh.dto.ClassDTO">
        INSERT INTO CLASS (class_number, title, description, category, create_time, update_time, thumbnail, rate, uno)
        VALUES (#{classNumber}, #{title}, #{description}, #{category}, SYSDATE, SYSDATE, #{thumbnail}, 0, #{uno})
    </insert>

    <update id="updateClass" parameterType="com.kh.dto.ClassDTO">
        UPDATE Class SET 
        title = #{title},
        description = #{description},
        category = #{category, jdbcType=VARCHAR},
        thumbnail = #{thumbnail},
        update_time = SYSDATE
        WHERE class_number = #{classNumber}
    </update>

    <delete id="deleteClass" parameterType="int">
        DELETE FROM class
        WHERE class_number = #{classNumber}
    </delete>

    <!-- 강사 강의 목록 조회 -->
    <select id="selectClassListByUno" resultMap="classMap">
        SELECT 
            c.class_number,
            c.title,
            c.description,
            c.category,
            c.create_time,
            c.update_time,
            c.thumbnail,
            c.rate,
            c.uno,
            u.name,
            (SELECT COUNT(*) FROM CHAPTER ch WHERE ch.class_number = c.class_number) AS chapterCount,
            (SELECT COUNT(*) FROM VIDEO v JOIN CHAPTER ch ON v.chapter_number = ch.chapter_number 
            WHERE ch.class_number = c.class_number) AS videoCount,
            (SELECT COUNT(DISTINCT up.uno) FROM USERS_PROGRESS up WHERE up.class_number = c.class_number) AS studentCount
        FROM CLASS c
        JOIN USERS u ON c.uno = u.uno
        WHERE c.uno = #{uno}
        ORDER BY c.create_time DESC
    </select>


</mapper>